resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:
- name: boss-deployer-repo
  type: git
  source:
    uri: git@github.com:smarla/boss-deployer.git
    branch: {{project-repo-branch}}
    private_key: {{concourse-private-ssh-key}}

- name: base-net-repo
  type: git
  source:
    uri: git@github.com:BBVAPaaSProj/aws-base-networking.git
    branch: master
    private_key: {{concourse-private-ssh-key}}

- name: notify
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: state-backup
  type: s3
  source:
    bucket: {{state-backup-bucket}}
    regexp: {{state-backup-regex}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: version-rc
  type: s3
  source:
    bucket: {{versioning-bucket}}
    versioned_file: {{versioning-file-rc}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: version-default
  type: s3
  source:
    bucket: {{versioning-bucket}}
    versioned_file: {{versioning-file-default}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: version-last
  type: s3
  source:
    bucket: {{versioning-bucket}}
    versioned_file: {{versioning-file-last}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: state-latest
  type: s3
  source:
    bucket: {{versioning-bucket}}
    versioned_file: {{versioning-state-latest}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: test-report
  type: s3
  source:
    bucket: {{test-report-bucket}}
    regexp: {{test-report-success-regex}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: error-report
  type: s3
  source:
    bucket: {{test-report-bucket}}
    regexp: {{test-report-error-regex}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: concourse-deploy-end
  type: s3
  source:
    bucket: bbva-paas-module-status
    versioned_file: concourse-ci/notify_deployed
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

jobs:
- name: versions
  plan:
    - do:
      - get: version-default

      - get: registry-repo
        trigger: true


      - task: versions
        privileged: true
        file: registry-repo/scripts/ci/versions/versions.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: version-rc
        params:
          file: "versions/rc.version"

#      on_failure:
#        put: notify
#        params:
#          text: {{slack-error-message-channel}}
#          channel: {{slack-error-channel}}

- name: provision
  plan:
    - do:
      - get: registry-repo
      - get: base-net-repo

      - get: version-rc
        trigger: true
        passed: [ versions ]

      - task: provision
        privileged: true
        file: registry-repo/scripts/ci/provision/provision.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: state-backup
        params:
          file: "terraform-state/*-provision.tfstate"

#      on_failure:
#        task: destroy
#        file: registry-repo/scripts/ci/destroy/destroy.yml

- name: concourse-config
  plan:
   - do:
     - get: concourse-deploy-end
       trigger: true

     - get: registry-repo
     - get: version-default
     - get: state-latest

     - task: concourse-config
       file: registry-repo/scripts/ci/concourse-config/concourse-config.yml
       params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

- name: configure
  plan:
    - do:
      - get: registry-repo

      - get: state-backup
        trigger: true
        passed: [ provision ]

      - task: configure
        privileged: true
        file: registry-repo/scripts/ci/configure/configure.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: state-backup
        params:
          file: "terraform-state/*-configure.tfstate"

#      on_failure:
#        put: notify
#        params:
#          text: {{slack-error-message-channel}}
#          channel: {{slack-error-channel}}

- name: spec
  plan:
    - do:
      - get: state-backup
        trigger: true
        passed: [ configure ]

      - get: registry-repo

      - task: test-spec
        file: registry-repo/scripts/ci/spec/spec.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: test-report
        params:
          file: "test-report/*-spec-report.json"

#      on_failure:
#        put: notify
#        params:
#          text: {{slack-error-message-channel}}
#          channel: {{slack-error-channel}}

- name: balance
  plan:
    - do:
      - get: test-report
        trigger: true
        passed: [ spec ]

      - get: version-rc
        passed: [ versions ]

      - get: version-default

      - get: registry-repo

      - get: state-backup
        passed: [ configure ]

      - task: balance
        file: registry-repo/scripts/ci/balance/balance.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: version-default
        params:
          file: "versions-out/default.version"

      - put: version-last
        params:
          file: "versions-out/last.version"

#      on_failure:
#        put: notify
#        params:
#          text: {{slack-error-message-channel}}
#          channel: {{slack-error-channel}}

- name: shutdown
  plan:
    - do:
      - get: version-last
        trigger: true
        passed: [ balance ]

      - get: registry-repo
      - get: base-net-repo
      - get: state-latest

      - get: state-backup
        passed: [ configure ]

      - task: shutdown
        file: registry-repo/scripts/ci/shutdown/shutdown.yml
        params:
          CONCOURSE_PRIVATE_GPG_KEY: {{concourse-private-gpg-key}}
          AWS_REGION: {{aws-region}}
          AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}

      - put: state-latest
        params:
          file: "state-latest/state-latest.tfstate"

##      on_failure:
##        put: notify
##        params:
##          text: {{slack-error-message-channel}}
##          channel: {{slack-error-channel}}
#
##      on_success:
##        put: notify
##        params:
##          text: {{slack-build-message-channel}}
##          channel: {{slack-build-channel}}